[{"C:\\roborally_frontend\\src\\index.tsx":"1","C:\\roborally_frontend\\src\\reportWebVitals.ts":"2","C:\\roborally_frontend\\src\\App.tsx":"3","C:\\roborally_frontend\\src\\context\\GameContext.ts":"4","C:\\roborally_frontend\\src\\context\\GameContextProvider.tsx":"5","C:\\roborally_frontend\\src\\components\\BoardComponent.tsx":"6","C:\\roborally_frontend\\src\\components\\GamesComponent.tsx":"7","C:\\roborally_frontend\\src\\api\\GameApi.ts":"8","C:\\roborally_frontend\\src\\components\\SpaceComponent.tsx":"9","C:\\roborally_frontend\\src\\components\\GameComponent.tsx":"10","C:\\roborally_frontend\\src\\types\\Player.ts":"11","C:\\roborally_frontend\\src\\types\\Space.ts":"12"},{"size":533,"mtime":1623409094371,"results":"13","hashOfConfig":"14"},{"size":440,"mtime":1623409094371,"results":"15","hashOfConfig":"14"},{"size":1197,"mtime":1623409094371,"results":"16","hashOfConfig":"14"},{"size":1430,"mtime":1623694324740,"results":"17","hashOfConfig":"14"},{"size":7647,"mtime":1623706251357,"results":"18","hashOfConfig":"14"},{"size":1645,"mtime":1623409094371,"results":"19","hashOfConfig":"14"},{"size":1520,"mtime":1623694324740,"results":"20","hashOfConfig":"14"},{"size":1582,"mtime":1623409094371,"results":"21","hashOfConfig":"14"},{"size":2359,"mtime":1623409094371,"results":"22","hashOfConfig":"14"},{"size":3945,"mtime":1623751180275,"results":"23","hashOfConfig":"14"},{"size":421,"mtime":1623751180269,"results":"24","hashOfConfig":"14"},{"size":115,"mtime":1623409094371,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ucw5zh",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\roborally_frontend\\src\\index.tsx",[],["54","55"],"C:\\roborally_frontend\\src\\reportWebVitals.ts",[],"C:\\roborally_frontend\\src\\App.tsx",["56"],"import React, {useContext} from 'react';\r\n\r\nimport BoardComponent from \"./components/BoardComponent\";\r\nimport GameContextProvider from \"./context/GameContextProvider\";\r\nimport GamesComponent from \"./components/GamesComponent\";\r\nimport GameContext from \"./context/GameContext\";\r\n\r\nfunction App() {\r\n    const{screenName} = useContext(GameContext)\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n            </header>\r\n            {/*Context provider component below makes sure the context is accessible in any children components*/}\r\n            <GameContextProvider>\r\n                <GamesComponent/>\r\n                <BoardComponent/>\r\n                {/* try to make a context provicer dor screenname for app, aane parse that to the inner context provider\r\n                    {\r\n                        'Game': <GamesComponent/>,\r\n                        'Board': <BoardComponent/>\r\n                    }[screenName]\r\n\r\n                    return the full list when making rest calls and update them in a then statement\r\n                */\r\n                }\r\n            </GameContextProvider>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\roborally_frontend\\src\\context\\GameContext.ts",[],"C:\\roborally_frontend\\src\\context\\GameContextProvider.tsx",["57","58","59"],"C:\\roborally_frontend\\src\\components\\BoardComponent.tsx",["60"],"import React, {FunctionComponent, useContext, useCallback} from 'react';\r\nimport {SpaceComponent} from \"./SpaceComponent\";\r\nimport styles from \"../styling/BoardComponent.module.scss\" //Import css module\r\nimport GameContext from \"../context/GameContext\";\r\n/*\r\nIf the board component took any props/arguments they would be declared inside the type below\r\nsee the space component for an example.\r\n */\r\n\r\ntype BoardComponentProps = {}\r\nconst BoardComponent: FunctionComponent<BoardComponentProps> = () => {\r\n    //{...} context is known as object destructuring\r\n    const {board, screenName, unselectGame } = useContext(GameContext) //Hook form of Context.Consumer, used to access the context\r\n    const OnClickGame = useCallback(() => {\r\n        unselectGame()\r\n    }, [])\r\n\r\n    return (\r\n        /*Apply css on div below*/\r\n        screenName ===\"Board\" ?\r\n            <div>\r\n                <h1>\r\n                    {board.boardName}\r\n                    <button onClick={OnClickGame} type=\"button\">Return to overview</button>\r\n                </h1>\r\n                <div className={styles.container}>\r\n                    {board.spaceDtos.map((spaceArray, index) =>\r\n                            <div key={\"spaceArray\" + index}>\r\n                                {\r\n                                    spaceArray.map((space, index) => <SpaceComponent key={\"space\" + index} space={space}/>)\r\n                                }\r\n\r\n                            </div>\r\n                        )\r\n                     }\r\n                </div>\r\n            </div>\r\n            :\r\n            <div/>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default BoardComponent\r\n\r\n\r\n","C:\\roborally_frontend\\src\\components\\GamesComponent.tsx",["61"],"import {FunctionComponent, useContext, useState} from \"react\";\r\nimport GameContext from \"../context/GameContext\";\r\nimport {GameComponent} from \"./GameComponent\";\r\nimport {Player} from \"../types/Player\";\r\nimport {Board} from \"../types/Board\";\r\n\r\ntype GamesComponentProps = {}\r\nconst GamesComponent: FunctionComponent<GamesComponentProps> = () => {\r\n    const{games,screenName, createBoard, selectedPlayer} = useContext(GameContext)\r\n    const [board, setBoard] = useState<Board>({\"boardId\" : -1,\"boardName\" : \"BoardName\",\"height\" : 8,\"width\" : 8,\"playerDtos\" : [],\"spaceDtos\":[]})\r\n\r\n    const OnClickGame = () => {\r\n        createBoard(board)\r\n    }\r\n\r\n    const changeBoardName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setBoard({ ...board, [event.target.name]: event.currentTarget.value });\r\n    };\r\n\r\n    return (\r\n        screenName===\"Game\" ?\r\n            <div>\r\n                <div>\r\n                    {selectedPlayer}\r\n                </div>\r\n\r\n                {games.map((game,index)=>\r\n                <GameComponent key ={\"game\" + index}game={game}/>\r\n                )\r\n                }\r\n                <input\r\n                    name=\"boardName\"\r\n                    value={board.boardName}\r\n                    type='text'\r\n                    onChange={changeBoardName}\r\n                />\r\n                <button type=\"submit\" onClick={() => OnClickGame()}>create new game</button>\r\n            </div>\r\n            :\r\n            <div/>\r\n    )\r\n\r\n}\r\nexport default GamesComponent","C:\\roborally_frontend\\src\\api\\GameApi.ts",[],"C:\\roborally_frontend\\src\\components\\SpaceComponent.tsx",[],"C:\\roborally_frontend\\src\\components\\GameComponent.tsx",["62","63","64","65","66","67"],"C:\\roborally_frontend\\src\\types\\Player.ts",[],"C:\\roborally_frontend\\src\\types\\Space.ts",["68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":9,"column":11,"nodeType":"75","messageId":"76","endLine":9,"endColumn":21},{"ruleId":"73","severity":1,"message":"77","line":17,"column":28,"nodeType":"75","messageId":"76","endLine":17,"endColumn":45},{"ruleId":"78","severity":1,"message":"79","line":57,"column":7,"nodeType":"80","endLine":57,"endColumn":9,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"79","line":67,"column":7,"nodeType":"80","endLine":67,"endColumn":9,"suggestions":"82"},{"ruleId":"78","severity":1,"message":"83","line":16,"column":8,"nodeType":"80","endLine":16,"endColumn":10,"suggestions":"84"},{"ruleId":"73","severity":1,"message":"85","line":4,"column":9,"nodeType":"75","messageId":"76","endLine":4,"endColumn":15},{"ruleId":"73","severity":1,"message":"86","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":14},{"ruleId":"73","severity":1,"message":"87","line":17,"column":22,"nodeType":"75","messageId":"76","endLine":17,"endColumn":33},{"ruleId":"73","severity":1,"message":"88","line":19,"column":12,"nodeType":"75","messageId":"76","endLine":19,"endColumn":17},{"ruleId":"73","severity":1,"message":"89","line":19,"column":19,"nodeType":"75","messageId":"76","endLine":19,"endColumn":27},{"ruleId":"73","severity":1,"message":"90","line":21,"column":11,"nodeType":"75","messageId":"76","endLine":21,"endColumn":18},{"ruleId":"78","severity":1,"message":"91","line":35,"column":8,"nodeType":"80","endLine":35,"endColumn":10,"suggestions":"92"},{"ruleId":"73","severity":1,"message":"85","line":1,"column":9,"nodeType":"75","messageId":"76","endLine":1,"endColumn":15},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"@typescript-eslint/no-unused-vars","'screenName' is assigned a value but never used.","Identifier","unusedVar","'setSelectedPlayer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'getGames'. Either include it or remove the dependency array.","ArrayExpression",["95"],["96"],"React Hook useCallback has a missing dependency: 'unselectGame'. Either include it or remove the dependency array.",["97"],"'Player' is defined but never used.","'styles' is defined but never used.","'setPlayerId' is assigned a value but never used.","'space' is assigned a value but never used.","'setSpace' is assigned a value but never used.","'options' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'screenName' and 'selectGame'. Either include them or remove the dependency array.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"99","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [getGames]",{"range":"106","text":"107"},{"range":"108","text":"107"},"Update the dependencies array to be: [unselectGame]",{"range":"109","text":"110"},"Update the dependencies array to be: [screenName, selectGame]",{"range":"111","text":"112"},[2431,2433],"[getGames]",[2724,2726],[766,768],"[unselectGame]",[1363,1365],"[screenName, selectGame]"]